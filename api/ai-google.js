// üöÄ CVC ITAQUA v7.7 - SISTEMA COMPLETO COM SUPORTE MULTITRECHO
// ================================================================================
// üìë √çNDICE GERAL DO SISTEMA
// ================================================================================
// 1. TEMPLATES DE OR√áAMENTOS
//    1.1 A√©reo Ida e Volta Simples
//    1.2 Voo Combinado (Mix de Companhias)
//    1.3 M√∫ltiplas Op√ß√µes
//    1.4 Pacote Completo (A√©reo + Hotel)
//    1.5 Voo com Conex√£o Detalhada
//    1.6 Apenas Detalhes (Sem Pre√ßo)
//    1.7 Cruzeiro
//    1.8 Multitrecho (NOVO)
//
// 2. TABELA DE CONVERS√ÉO DE AEROPORTOS
//    2.1 Aeroportos Brasileiros Principais
//    2.2 Aeroportos Brasileiros Regionais
//    2.3 Aeroportos Am√©rica do Sul
//    2.4 Aeroportos Am√©rica do Norte/Central
//    2.5 Aeroportos Europa
//
// 3. HANDLER PRINCIPAL DA API
//    3.1 Configura√ß√£o CORS
//    3.2 Endpoint GET - Status
//    3.3 Endpoint POST - Processar
//
// 4. PROCESSAMENTO DE DADOS
//    4.1 Detec√ß√£o de Passageiros
//    4.2 Detec√ß√£o de Tipos
//    4.3 An√°lise de Conte√∫do
//    4.4 Detec√ß√£o de Multitrecho (NOVO)
//
// 5. PROMPTS ESPECIALIZADOS
//    5.1 Prompt para Dicas
//    5.2 Prompt para Ranking
//    5.3 Prompt Principal para Or√ßamentos
//    5.4 Regras para Multitrecho (NOVO)
//
// 6. PROCESSAMENTO COM IA
//    6.1 Decis√£o de IA (Claude vs GPT)
//    6.2 Processamento com Claude
//    6.3 Processamento com GPT
//
// 7. RESPOSTA FINAL
//    7.1 Formata√ß√£o de Resposta
//    7.2 Logs e Debug
// ================================================================================

// ================================================================================
// 1. üìã TEMPLATES DE OR√áAMENTOS - TODOS OS CASOS
// ================================================================================
const TEMPLATES = {
    // 1.1 - Template A√©reo Ida e Volta Simples
    aereo_ida_volta: `
*{companhia} - {cidadeOrigem} ‚úà {cidadeDestino}*
{dataIda} - {aeroportoOrigem} {horaIda} / {aeroportoDestino} {horaChegadaIda} ({tipoVoo})
--
{dataVolta} - {aeroportoDestino} {horaVolta} / {aeroportoOrigem} {horaChegadaVolta} ({tipoVooVolta})

üí∞ R$ {valorTotal} para {passageiros}
‚úÖ {bagagem}
üè∑Ô∏è {reembolso}

Valores sujeitos a confirma√ß√£o e disponibilidade`,

    // 1.2 - Template Voo Combinado (Mix de Companhias)
    voo_combinado: `
*Voo {cidadeOrigem} ‚úà {cidadeDestino}*
{dataIda} a {dataVolta} ({dias} dias e {noites} noites)

‚úàÔ∏è IDA - {companhiaIda}
{dataIda} - {aeroportoOrigem} {horaIda} / {aeroportoConexao} {horaChegadaConexao} (voo direto)
(conex√£o em {cidadeConexao} - {tempoEspera} de espera)
{dataIda} - {aeroportoConexao} {horaSaidaConexao} / {aeroportoDestino} {horaChegadaDestino} (voo direto)

‚úàÔ∏è VOLTA - {companhiaVolta}
{dataVolta} - {aeroportoDestino} {horaVolta} / {aeroportoConexaoVolta} {horaChegadaConexaoVolta} (voo direto)
(conex√£o em {cidadeConexaoVolta} - {tempoEsperaVolta} de espera)
{dataVoltaDia} - {aeroportoConexaoVolta} {horaSaidaConexaoVolta} / {aeroportoOrigem} {horaChegadaVolta} (voo direto)

üí∞ R$ {valorTotal} para {passageiros}
üí≥ {parcelamento}
‚úÖ {bagagem}
üè∑Ô∏è {reembolso}

Valores sujeitos a confirma√ß√£o e disponibilidade`,

    // 1.3 - Template M√∫ltiplas Op√ß√µes (2+ escolhas)
    multiplas_opcoes: `
*OP√á√ÉO 1 - {companhia1} - {cidadeOrigem} ‚úà {cidadeDestino}*
{dataIda1} - {aeroportoOrigem1} {horaIda1} / {aeroportoDestino1} {horaChegadaIda1} ({tipoVoo1})
--
{dataVolta1} - {aeroportoDestino1} {horaVolta1} / {aeroportoOrigem1} {horaChegadaVolta1} ({tipoVooVolta1})

üí∞ R$ {valor1} para {passageiros1}
‚úÖ {bagagem1}
üè∑Ô∏è {reembolso1}

---

*OP√á√ÉO 2 - {companhia2} - {cidadeOrigem} ‚úà {cidadeDestino}*
{dataIda2} - {aeroportoOrigem2} {horaIda2} / {aeroportoDestino2} {horaChegadaIda2} ({tipoVoo2})
--
{dataVolta2} - {aeroportoDestino2} {horaVolta2} / {aeroportoOrigem2} {horaChegadaVolta2} ({tipoVooVolta2})
{notaCodeshare}

üí∞ R$ {valor2} para {passageiros2}
‚úÖ {bagagem2}
üè∑Ô∏è {reembolso2}

Valores sujeitos a confirma√ß√£o e disponibilidade`,

    // 1.4 - Template Pacote Completo (A√©reo + Hotel)
    pacote_completo: `
*Pacote {destino}*
{dataIda} a {dataVolta} ({dias} dias e {noites} noites)
Pacote para {passageiros}

*O Pacote Inclui:*
- Passagem A√©rea ida e volta
- Taxas de Embarque
- {noites} noites de hospedagem
{servicosAdicionais}

‚úàÔ∏è *Voos:*
IDA - {companhiaIda} - {dataIda}
{origemIda} {horaIda} / {destinoIda} {horaChegadaIda} ({tipoVooIda})

VOLTA - {companhiaVolta} - {dataVolta}
{origemVolta} {horaVolta} / {destinoVolta} {horaChegadaVolta} ({tipoVooVolta})

üè® *Hotel Selecionado:*
{nomeHotel}
üìç {enderecoHotel}
üõèÔ∏è {tipoQuarto}
‚òï {regime}
{observacoesHotel}

üí∞ R$ {valorTotal} total
üí≥ {parcelamento}
üè∑Ô∏è {reembolso}

Valores sujeitos a confirma√ß√£o e disponibilidade`,

    // 1.5 - Template Voo com Conex√£o Detalhada
    voo_conexao_detalhada: `
*{companhia} - {cidadeOrigem} ‚úà {cidadeDestino}*
{dataIda} - {aeroportoOrigem} {horaIda} / {aeroportoDestino} {horaChegadaIda} (com {paradas} - {duracao})
--
{dataVolta} - {aeroportoDestino} {horaVolta} / {aeroportoOrigem} {horaChegadaVolta} (com {paradasVolta} - {duracaoVolta})

üí∞ R$ {valorTotal} para {passageiros}
üí≥ {parcelamento}
‚úÖ {bagagem}
üè∑Ô∏è {reembolso}

Valores sujeitos a confirma√ß√£o e disponibilidade`,

    // 1.6 - Template Apenas Detalhes (Sem Pre√ßo)
    detalhes_sem_preco: `
*{companhia} - {cidadeOrigem} ‚úà {cidadeDestino}*
{dataIda} - {aeroportoOrigem} {horaIda} / {aeroportoDestino} {horaChegadaIda} ({tipoVoo})
{detalhesConexaoIda}
--
{dataVolta} - {aeroportoDestino} {horaVolta} / {aeroportoOrigem} {horaChegadaVolta} ({tipoVooVolta})
{detalhesConexaoVolta}

‚úÖ {bagagem}
üè∑Ô∏è {reembolso}

Valores sujeitos a confirma√ß√£o e disponibilidade`,

    // 1.7 - Template Cruzeiro
    cruzeiro: `
üö¢ *Cruzeiro {nomeNavio}* ‚Äì {noites} noites
{passageiros}
üìÖ Embarque: {dataEmbarque} ({diaSemana})
üìç Sa√≠da e chegada: {porto}
üåä Roteiro incr√≠vel pelo litoral brasileiro!

üí• Tarifas dispon√≠veis!
(Sujeita √† confirma√ß√£o de cabine e categoria)

üõè Op√ß√µes de Cabines:
{opcoesCabines}

‚úÖ Inclui: hospedagem a bordo, pens√£o completa
üö´ N√£o inclui: taxas, bebidas, excurs√µes

üì≤ Me chama pra garantir a sua cabine! üå¥üõ≥Ô∏è

Valores sujeitos a confirma√ß√£o e disponibilidade`,

    // 1.8 - Template Multitrecho (NOVO)
    multitrecho: `
*{companhia} - Multitrecho*
{trechos_detalhados}

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
üí∞ *VALORES DISPON√çVEIS:*
Para {passageiros}

{opcoes_valores}

Valores sujeitos a confirma√ß√£o e disponibilidade`
};

// ================================================================================
// 2. üó∫Ô∏è TABELA COMPLETA DE CONVERS√ÉO DE AEROPORTOS
// ================================================================================
const AEROPORTOS = {
    // 2.1 - Aeroportos Brasileiros Principais
    'GRU': 'Guarulhos',
    'CGH': 'Congonhas',
    'VCP': 'Viracopos',
    'SDU': 'Santos Dumont',
    'GIG': 'Gale√£o',
    'BSB': 'Bras√≠lia',
    'CNF': 'Confins',
    'PLU': 'Pampulha',
    'POA': 'Porto Alegre',
    'CWB': 'Curitiba',
    'FLN': 'Florian√≥polis',
    'SSA': 'Salvador',
    'REC': 'Recife',
    'FOR': 'Fortaleza',
    'NAT': 'Natal',
    'MCZ': 'Macei√≥',
    'AJU': 'Aracaju',
    'JPA': 'Jo√£o Pessoa',
    'THE': 'Teresina',
    'SLZ': 'S√£o Lu√≠s',
    'BEL': 'Bel√©m',
    'MAO': 'Manaus',
    'CGB': 'Cuiab√°',
    'CGR': 'Campo Grande',
    'GYN': 'Goi√¢nia',
    'VIX': 'Vit√≥ria',

    // 2.2 - Aeroportos Brasileiros Regionais
    'BPS': 'Porto Seguro',
    'IOS': 'Ilh√©us',
    'CMG': 'Corumb√°',
    'JDO': 'Juazeiro do Norte',
    'IMP': 'Imperatriz',
    'MAB': 'Marab√°',
    'STM': 'Santar√©m',
    'RBR': 'Rio Branco',
    'PVH': 'Porto Velho',
    'BVB': 'Boa Vista',
    'MCP': 'Macap√°',
    'PMW': 'Palmas',
    'UDI': 'Uberl√¢ndia',
    'RAO': 'Ribeir√£o Preto',
    'JOI': 'Joinville',
    'XAP': 'Chapec√≥',
    'IGU': 'Foz do Igua√ßu',
    'LDB': 'Londrina',
    'MGF': 'Maring√°',

    // 2.3 - Aeroportos Am√©rica do Sul
    'EZE': 'Ezeiza - Buenos Aires',
    'AEP': 'Aeroparque - Buenos Aires',
    'SCL': 'Santiago',
    'LIM': 'Lima',
    'BOG': 'Bogot√°',
    'GYE': 'Guayaquil',
    'UIO': 'Quito',
    'CCS': 'Caracas',
    'MVD': 'Montevid√©u',
    'ASU': 'Assun√ß√£o',
    'LPB': 'La Paz',
    'VVI': 'Santa Cruz de la Sierra',

    // 2.4 - Aeroportos Am√©rica do Norte/Central
    'MEX': 'Cidade do M√©xico',
    'CUN': 'Canc√∫n',
    'MIA': 'Miami',
    'MCO': 'Orlando',
    'FLL': 'Fort Lauderdale',
    'JFK': 'Nova York - JFK',
    'EWR': 'Newark',
    'LAX': 'Los Angeles',
    'SFO': 'San Francisco',
    'ORD': 'Chicago',
    'YYZ': 'Toronto',

    // 2.5 - Aeroportos Europa
    'LIS': 'Lisboa',
    'OPO': 'Porto',
    'MAD': 'Madrid',
    'BCN': 'Barcelona',
    'CDG': 'Paris - Charles de Gaulle',
    'ORY': 'Paris - Orly',
    'FCO': 'Roma - Fiumicino',
    'MXP': 'Mil√£o - Malpensa',
    'LHR': 'Londres - Heathrow',
    'LGW': 'Londres - Gatwick',
    'FRA': 'Frankfurt',
    'AMS': 'Amsterd√£',
    'ZRH': 'Zurique'
};

// ================================================================================
// 3. üéØ HANDLER PRINCIPAL DA API v7.7
// ================================================================================
export default async function handler(req, res) {
    // 3.1 - Configura√ß√£o CORS
    res.setHeader('Access-Control-Allow-Origin', '*');
    res.setHeader('Access-Control-Allow-Methods', 'GET, POST, OPTIONS');
    res.setHeader('Access-Control-Allow-Headers', 'Content-Type');

    if (req.method === 'OPTIONS') {
        return res.status(200).end();
    }

    // 3.2 - Endpoint GET - Status da API
    if (req.method === 'GET') {
        const hasOpenAI = !!process.env.OPENAI_API_KEY;
        const hasAnthropic = !!process.env.ANTHROPIC_API_KEY;

        return res.status(200).json({
            success: true,
            message: 'API CVC Itaqua v7.7 - Online (Com suporte multitrecho aprimorado)',
            version: '7.7',
            services: {
                openai: hasOpenAI ? 'Configurado' : 'N√£o configurado',
                anthropic: hasAnthropic ? 'Configurado' : 'N√£o configurado'
            },
            features: [
                'Sistema com √≠ndice completo',
                'Detec√ß√£o de voo combinado vs m√∫ltiplas op√ß√µes',
                'Suporte a codeshare',
                'Processamento com e sem pre√ßos',
                'Template de pacote completo',
                'Sistema de dicas e ranking',
                'Formata√ß√£o perfeita para WhatsApp',
                'Suporte multitrecho com m√∫ltiplas op√ß√µes (NOVO)',
                'Detec√ß√£o autom√°tica de parcelamento (NOVO)'
            ],
            lastUpdate: '2025-01-14',
            sections: {
                '1': 'Templates de Or√ßamentos',
                '2': 'Tabela de Aeroportos',
                '3': 'Handler Principal',
                '4': 'Processamento de Dados',
                '5': 'Prompts Especializados',
                '6': 'Processamento com IA',
                '7': 'Resposta Final'
            }
        });
    }

    // 3.3 - Endpoint POST - Processar Or√ßamento
    if (req.method === 'POST') {
        try {
            console.log('üì• Requisi√ß√£o recebida v7.7');

            const {
                observacoes = '',
                textoColado = '',
                destino = '',
                adultos = '',
                criancas = 0,
                idadesCriancas = [],
                tipos = [],
                parcelamento = null,
                imagemBase64 = null,
                pdfContent = null
            } = req.body;

            // ================================================================================
            // 4. üìä PROCESSAMENTO DE DADOS
            // ================================================================================

            // Determinar conte√∫do principal
            const conteudoPrincipal = observacoes || textoColado || pdfContent || '';
            const conteudoLower = conteudoPrincipal.toLowerCase();

            // 4.1 - Detec√ß√£o de Passageiros
            let infoPassageiros = '';
            const padraoTotal = conteudoPrincipal.match(/Total\s*\((\d+)\s*(?:Adulto|Adultos)(?:\s*(?:e|\+)\s*(\d+)\s*(?:Crian√ßa|Crian√ßas))?\)/i);
            const padraoPassageiros = conteudoPrincipal.match(/(\d+)\s*(?:adulto|adultos)(?:\s*(?:e|\+)\s*(\d+)\s*(?:crian√ßa|crian√ßas))?/i);

            if (padraoTotal) {
                const numAdultos = parseInt(padraoTotal[1]);
                const numCriancas = padraoTotal[2] ? parseInt(padraoTotal[2]) : 0;
                let textoPax = `${String(numAdultos).padStart(2, '0')} ${numAdultos === 1 ? 'adulto' : 'adultos'}`;
                if (numCriancas > 0) {
                    textoPax += ` + ${String(numCriancas).padStart(2, '0')} ${numCriancas === 1 ? 'crian√ßa' : 'crian√ßas'}`;
                    if (idadesCriancas && idadesCriancas.length > 0) {
                        textoPax += ` (${idadesCriancas.join(' e ')} anos)`;
                    }
                }
                infoPassageiros = textoPax;
            } else if (padraoPassageiros) {
                const numAdultos = parseInt(padraoPassageiros[1]);
                const numCriancas = padraoPassageiros[2] ? parseInt(padraoPassageiros[2]) : 0;
                let textoPax = `${String(numAdultos).padStart(2, '0')} ${numAdultos === 1 ? 'adulto' : 'adultos'}`;
                if (numCriancas > 0) {
                    textoPax += ` + ${String(numCriancas).padStart(2, '0')} ${numCriancas === 1 ? 'crian√ßa' : 'crian√ßas'}`;
                    if (idadesCriancas && idadesCriancas.length > 0) {
                        textoPax += ` (${idadesCriancas.join(' e ')} anos)`;
                    }
                }
                infoPassageiros = textoPax;
            }
            
            // 4.1.1 - Detec√ß√£o autom√°tica de destino se n√£o fornecido
            let destinoFinal = destino && destino !== 'Destino' && destino !== '' ? destino : null;
            if (!destinoFinal && conteudoPrincipal) {
                // Tentar extrair destino do conte√∫do
                const padraoDestino = conteudoPrincipal.match(/(?:Orlando|Miami|Canc√∫n|Porto Seguro|Macei√≥|Fortaleza|Lisboa|Paris|Buenos Aires|Santiago|Nova York|Rio de Janeiro|Gramado|Natal|Jo√£o Pessoa|Foz do Igua√ßu|Caldas Novas|Balne√°rio Cambori√∫|Juazeiro do Norte|Salvador|Recife|Bras√≠lia|Curitiba|Florian√≥polis|Vit√≥ria|Belo Horizonte|Manaus|Bel√©m|S√£o Lu√≠s)/i);
                if (padraoDestino) {
                    destinoFinal = padraoDestino[0];
                    console.log('üìç Destino detectado automaticamente:', destinoFinal);
                }
            }

            // 4.2 - Detec√ß√£o de Tipos Especiais
            const isDicas = tipos.includes('Dicas');
            const isRanking = tipos.includes('Ranking');

            // 4.3 - An√°lise de Conte√∫do
            const temHotel = tipos.includes('Hotel') || conteudoLower.includes('palazzo') || conteudoLower.includes('hotel');
            const temAereo = tipos.includes('A√©reo') || conteudoLower.includes('voo') || conteudoLower.includes('ida');
            const isPacote = temHotel && temAereo;
            const temPreco = conteudoLower.includes('r$');
            const temAvianca = conteudoLower.includes('avianc');
            const temGol = conteudoLower.includes('gol');
            const temMultiplasOpcoes = conteudoLower.includes('op√ß√£o 1') || (conteudoLower.includes('selecionado') && conteudoLower.split('selecionado').length > 2);
            const linkMatch = conteudoPrincipal.match(/https:\/\/www\.cvc\.com\.br\/[^\s]+/);
            const linkCVC = linkMatch ? linkMatch[0] : null;

            // 4.4 - Detec√ß√£o de Multitrecho (NOVO)
            const isMultitrecho = conteudoLower.includes('multitrecho') || 
                                  conteudoLower.includes('trecho 1') || 
                                  (conteudoLower.includes('trecho') && conteudoLower.split('trecho').length > 2);

            // Detectar se tem info de parcelamento
            const temInfoParcelamento = conteudoPrincipal.includes('Entrada de R$') || 
                                        conteudoPrincipal.includes('x de R$') ||
                                        conteudoPrincipal.includes('x s/ juros') ||
                                        parcelamento !== null;

            // Log de an√°lise
            console.log('üîç An√°lise do conte√∫do:');
            console.log('- Tipos selecionados:', tipos);
            console.log('- Tem imagem?', !!imagemBase64);
            console.log('- Tem hotel?', temHotel);
            console.log('- Tem pre√ßo?', temPreco);
            console.log('- Tem link?', !!linkCVC);
            console.log('- Tem Avianca?', temAvianca);
            console.log('- Tem Gol?', temGol);
            console.log('- √â pacote?', isPacote);
            console.log('- M√∫ltiplas Op√ß√µes?', temMultiplasOpcoes);
            console.log('- √â multitrecho?', isMultitrecho);
            console.log('- Tem info parcelamento?', temInfoParcelamento);

            let prompt = '';

            // ================================================================================
            // 5. üìù PROMPTS ESPECIALIZADOS
            // ================================================================================

            if (isDicas) {
                let destinoReal = destino && destino !== 'Destino' && destino !== '' ? destino : null;
                if (!destinoReal && conteudoPrincipal) {
                    const padraoDestino = conteudoPrincipal.match(/(?:Orlando|Miami|Canc√∫n|Porto Seguro|Macei√≥|Fortaleza|Lisboa|Paris|Buenos Aires|Santiago|Nova York|Rio de Janeiro|Gramado|Natal|Jo√£o Pessoa)/i);
                    if (padraoDestino) {
                        destinoReal = padraoDestino[0];
                    }
                }
                const temCriancas = conteudoLower.includes('crian√ßa');
                const isCruzeiro = conteudoLower.includes('cruzeiro');
                const isOrlando = destinoReal && destinoReal.toLowerCase().includes('orlando');
                prompt = `Voc√™ √© um especialista em viagens da CVC Itaqua.
        
                ${!destinoReal ? 'ANALISE o conte√∫do abaixo, IDENTIFIQUE o destino mencionado e crie dicas espec√≠ficas.' : `Crie dicas ESPEC√çFICAS e PR√ÅTICAS para ${destinoReal}.`}
                
                ${isCruzeiro ? 'Este √© um CRUZEIRO. Foque em vida a bordo, cabines, refei√ß√µes.' : ''}
                ${temCriancas ? 'A viagem inclui CRIAN√áAS. Adapte as dicas para fam√≠lias.' : ''}
                
                CONTE√öDO: ${conteudoPrincipal || 'Destino n√£o especificado'}
                
                ${isOrlando ? `
                REGRAS ESPECIAIS PARA ORLANDO:
                - Mencione que a CVC vende ingressos para todos os parques
                - Destaque que organizamos toda a programa√ß√£o dos parques
                - Informe sobre loca√ß√£o de carros pela CVC
                - Dicas pr√°ticas de economia e log√≠stica
                - Sugest√µes de roteiro por dia` : ''}
                
                FORMATO OBRIGAT√ìRIO:
                
                üåü DICAS PARA ${destinoReal || '[DESTINO]'} ${temCriancas ? '- VIAGEM EM FAM√çLIA' : ''} üåü
                
                üìÖ SOBRE SUA VIAGEM:
                [Clima, √©poca, o que esperar]
                ${temCriancas ? '[Atividades ideais para crian√ßas]' : ''}
                
                ${isOrlando ? `
                üé¢ PARQUES TEM√ÅTICOS:
                ‚úÖ A CVC Itaqua vende ingressos para TODOS os parques com pre√ßos especiais!
                ‚úÖ Organizamos sua programa√ß√£o completa: qual parque em cada dia
                ‚úÖ Dicas de FastPass e hor√°rios estrat√©gicos
                [Sugest√µes espec√≠ficas de roteiro]
                
                üöó TRANSPORTE:
                ‚úÖ Loca√ß√£o de carros pela CVC com tarifas exclusivas
                ‚úÖ Seguro completo e GPS inclu√≠do
                ‚úÖ Entrega no aeroporto ou hotel
                [Dicas de deslocamento entre parques]` : ''}
                
                üí∞ DICAS DE ECONOMIA:
                [3-4 dicas pr√°ticas e espec√≠ficas]
                [Mencionar vantagens dos pacotes CVC]
                
                üçΩÔ∏è GASTRONOMIA:
                [Pratos/restaurantes imperd√≠veis]
                ${temCriancas ? '[Op√ß√µes family-friendly]' : ''}
                
                üõçÔ∏è COMPRAS:
                [Melhores outlets e lojas]
                [Dicas de tax free se aplic√°vel]
                
                üì± DICAS PR√ÅTICAS:
                [Aplicativos √∫teis]
                [Documenta√ß√£o necess√°ria]
                ${temCriancas ? '[Itens essenciais para crian√ßas]' : ''}
                
                ‚ö†Ô∏è IMPORTANTE:
                üìû A CVC Itaqua oferece assist√™ncia completa durante toda sua viagem!
                ‚úÖ Ingressos, transfers, passeios - tudo com a gente!
                
                INSTRU√á√ïES:
                - Use emojis apropriados
                - Seja espec√≠fico e pr√°tico
                - Sempre mencione os servi√ßos CVC quando relevante
                - Formata√ß√£o para WhatsApp
                - N√ÉO use formato de lista numerada gen√©rica`;

            } else if (isRanking) {
                let destinoRanking = destino && destino !== 'Destino' && destino !== '' ? destino : null;
                if (!destinoRanking && conteudoPrincipal) {
                    const padraoDestino = conteudoPrincipal.match(/(?:Orlando|Miami|Canc√∫n|Porto Seguro|Macei√≥|Fortaleza|Lisboa|Paris|Buenos Aires|Santiago|Nova York|Rio de Janeiro|Gramado|Natal|Jo√£o Pessoa|Foz do Igua√ßu|Caldas Novas|Balne√°rio Cambori√∫)/i);
                    if (padraoDestino) {
                        destinoRanking = padraoDestino[0];
                    }
                }
                if (!destinoRanking) {
                    destinoRanking = 'Orlando';
                }
                prompt = `Voc√™ √© um especialista em hot√©is da CVC Itaqua.
        
                Crie um ranking dos TOP 5 hot√©is REAIS em ${destinoRanking}.
                
                CONTE√öDO PARA CONTEXTO: ${conteudoPrincipal || 'N√£o fornecido'}
                
                IMPORTANTE:
                - Use apenas hot√©is que REALMENTE EXISTEM em ${destinoRanking}
                - Inclua variedade: luxo, m√©dio, econ√¥mico
                - Mencione que a CVC tem tarifas especiais
                - Se poss√≠vel, inclua hot√©is mencionados no conte√∫do
                
                Use EXATAMENTE este formato:
                
                üèÜ TOP 5 HOT√âIS - ${destinoRanking.toUpperCase()} üèÜ
                ‚úÖ Todos dispon√≠veis na CVC com tarifas exclusivas!
                
                1Ô∏è‚É£ [Nome do Hotel Real] ‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê
                üìç [Localiza√ß√£o/Bairro real]
                ‚ú® [Principal diferencial verdadeiro]
                üõèÔ∏è [Tipo de acomoda√ß√£o]
                üí∞ Di√°ria m√©dia: R$ [valor realista]
                üìû Reserve com a CVC: melhores tarifas!
                
                2Ô∏è‚É£ [Nome do Hotel Real] ‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê
                üìç [Localiza√ß√£o/Bairro real]
                ‚ú® [Principal diferencial verdadeiro]
                üõèÔ∏è [Tipo de acomoda√ß√£o]
                üí∞ Di√°ria m√©dia: R$ [valor realista]
                üìû Parcelamento exclusivo CVC
                
                3Ô∏è‚É£ [Nome do Hotel Real] ‚≠ê‚≠ê‚≠ê‚≠ê
                üìç [Localiza√ß√£o/Bairro real]
                ‚ú® [Principal diferencial verdadeiro]
                üõèÔ∏è [Tipo de acomoda√ß√£o]
                üí∞ Di√°ria m√©dia: R$ [valor realista]
                üìû Pacotes com a√©reo na CVC
                
                4Ô∏è‚É£ [Nome do Hotel Real] ‚≠ê‚≠ê‚≠ê‚≠ê
                üìç [Localiza√ß√£o/Bairro real]
                ‚ú® [Principal diferencial verdadeiro]
                üõèÔ∏è [Tipo de acomoda√ß√£o]
                üí∞ Di√°ria m√©dia: R$ [valor realista]
                üìû Ofertas especiais CVC
                
                5Ô∏è‚É£ [Nome do Hotel Real] ‚≠ê‚≠ê‚≠ê
                üìç [Localiza√ß√£o/Bairro real]
                ‚ú® Melhor custo-benef√≠cio
                üõèÔ∏è [Tipo de acomoda√ß√£o]
                üí∞ Di√°ria m√©dia: R$ [valor realista]
                üìû Condi√ß√µes imperd√≠veis na CVC
                
                üí° DICA: A CVC Itaqua oferece:
                ‚Ä¢ Parcelamento em at√© 10x sem juros
                ‚Ä¢ Pacotes completos com a√©reo + hotel
                ‚Ä¢ Seguro viagem inclu√≠do
                ‚Ä¢ Assist√™ncia 24h durante sua estadia
                
                üì≤ Entre em contato para valores exclusivos!
                
                INSTRU√á√ïES FINAIS:
                - N√ÉO pergunte ao usu√°rio qual destino
                - Use hot√©is REAIS do destino
                - Se o destino for Orlando, inclua hot√©is pr√≥ximos aos parques
                - Sempre destaque os benef√≠cios CVC`;

            } else {
                // 5.3 - Prompt Principal para Or√ßamentos
                const tabelaAeroportos = Object.entries(AEROPORTOS)
                    .map(([codigo, nome]) => `${codigo} ‚Üí ${nome}`)
                    .join('\n');

                // 5.4 - Regras para Multitrecho (NOVO)
                const multitrecho_rules = isMultitrecho ? `
**üî¥ ATEN√á√ÉO: DETECTADO MULTITRECHO!**

USE ESTE FORMATO ESPEC√çFICO:

SE OS VOOS S√ÉO ID√äNTICOS COM VALORES DIFERENTES (m√∫ltiplas op√ß√µes):

*{Companhia} - Multitrecho*
{data1} - {origem1} {hora1} / {destino1} {hora2} ({tipo})
--
{data2} - {origem2} {hora3} / {destino2} {hora4} ({tipo})
--
{data3} - {origem3} {hora5} / {destino3} {hora6} ({tipo})

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
üí∞ *VALORES DISPON√çVEIS:*
Para {passageiros}

*Op√ß√£o 1:* R$ {valor1}
‚úÖ {bagagem1 - detectar diferen√ßa pelos √≠cones}
${temInfoParcelamento ? 'üí≥ {parcelamento1 no formato: "Parcelamento em at√© 10x sem juros no cart√£o, sendo a primeira parcela de R$ X + 9x de R$ Y s/ juros"}' : ''}
üè∑Ô∏è {tarifa1}
üîó {link1 se houver}

*Op√ß√£o 2:* R$ {valor2}
‚úÖ {bagagem2 - detectar diferen√ßa pelos √≠cones}
${temInfoParcelamento ? 'üí≥ {parcelamento2 no formato: "Parcelamento em at√© 10x sem juros no cart√£o, sendo a primeira parcela de R$ X + 9x de R$ Y s/ juros"}' : ''}
üè∑Ô∏è {tarifa2}
üîó {link2 se houver}

Valores sujeitos a confirma√ß√£o e disponibilidade

REGRAS CR√çTICAS MULTITRECHO:
1. N√ÉO repetir nome da companhia entre trechos
2. N√ÉO colocar t√≠tulos entre os trechos (tipo "Trecho 2")
3. Usar apenas -- para separar trechos
4. Se houver diferen√ßa de bagagem, identificar: "Somente bagagem de m√£o" vs "Bagagem de m√£o + 23kg despachada"
5. ${!temInfoParcelamento ? 'N√ÉO incluir linha de parcelamento - n√£o h√° essa informa√ß√£o' : 'SEMPRE formatar parcelamento como: "Parcelamento em at√© 10x sem juros no cart√£o, sendo a primeira parcela de R$ X + 9x de R$ Y s/ juros"'}
6. NUNCA usar "Entrada de", sempre "primeira parcela de"
7. Se houver m√∫ltiplas op√ß√µes com mesmos voos, usar formato compacto com valores separados
` : '';

                prompt = `Voc√™ √© um assistente da CVC Itaqua.
ANALISE CUIDADOSAMENTE o tipo de or√ßamento.

${multitrecho_rules}

**DADOS DO CLIENTE:**
${conteudoPrincipal}
${destino ? `Destino: ${destino}` : ''}
${infoPassageiros ? `Passageiros: ${infoPassageiros}` : ''}
${parcelamento ? `Parcelamento: ${parcelamento}x sem juros` : ''}
${linkCVC ? `Link CVC: ${linkCVC}` : ''}

**AN√ÅLISE DETECTADA:**
- Tem Hotel? ${temHotel ? 'SIM' : 'N√ÉO'}
- Tem A√©reo? ${temAereo ? 'SIM' : 'N√ÉO'}
- √â Pacote? ${isPacote ? 'SIM' : 'N√ÉO'}
- Tem Pre√ßo? ${temPreco ? 'SIM' : 'N√ÉO'}
- Tem Link? ${linkCVC ? 'SIM - INCLUIR!' : 'N√ÉO'}
- Tem Avianca? ${temAvianca ? 'SIM' : 'N√ÉO'}
- Tem Gol? ${temGol ? 'SIM' : 'N√ÉO'}
- M√∫ltiplas Op√ß√µes? ${temMultiplasOpcoes ? 'SIM' : 'N√ÉO'}
- √â Multitrecho? ${isMultitrecho ? 'SIM - USAR FORMATO ESPECIAL!' : 'N√ÉO'}
- Tem info de parcelamento? ${temInfoParcelamento ? 'SIM - INCLUIR' : 'N√ÉO - OMITIR'}

// =================================================================
// IDENTIFICA√á√ÉO CR√çTICA DO TIPO
// =================================================================

**REGRAS DE PRIORIDADE:**

1. **MULTITRECHO** (M√∫ltiplos trechos de voo)
   ${isMultitrecho ? '‚úÖ DETECTADO - USE TEMPLATE MULTITRECHO!' : ''}
   
2. **PACOTE COMPLETO** (Hotel + A√©reo juntos)
   ${isPacote && !isMultitrecho ? '‚úÖ DETECTADO - USE TEMPLATE DE PACOTE!' : ''}
   - Palazzo Lakeside ou outros hot√©is + voos
   - Use template com se√ß√µes separadas para voo e hotel
   
3. **M√öLTIPLAS OP√á√ïES** (2+ cards "Selecionado")
   ${temMultiplasOpcoes && !isMultitrecho ? '‚úÖ DETECTADO - USE OP√á√ÉO 1 e OP√á√ÉO 2!' : ''}
   - Diferentes datas/hor√°rios/passageiros
   - Cada op√ß√£o com seu pre√ßo
   
4. **VOO COMBINADO** (Mix no mesmo itiner√°rio)
   ${temAvianca && temGol && !temMultiplasOpcoes && !isMultitrecho ? '‚úÖ DETECTADO - USE VOO COMBINADO!' : ''}
   - Ida Avianca + Volta Gol (ou vice-versa)
   - Um √∫nico pre√ßo total
   
5. **VOO SIMPLES** (Ida e volta normal)
   - Uma companhia ou codeshare
   - Com ou sem conex√£o
   
6. **SEM PRE√áO** (Apenas detalhes)
   ${!temPreco ? '‚úÖ DETECTADO - N√ÉO INCLUIR VALORES!' : ''}
   - Omitir linha de valor
   - Manter outros detalhes

// =================================================================
// TEMPLATES ESPEC√çFICOS (Exemplos para a IA seguir)
// =================================================================

${isPacote && !isMultitrecho ? `
**USE ESTE TEMPLATE DE PACOTE:**

*Pacote {destino}*
{data_ida} a {data_volta} ({X} dias e {Y} noites)
Pacote para {passageiros}

*O Pacote Inclui:*
- Passagem A√©rea ida e volta
- Taxas de Embarque
- {noites} noites de hospedagem
- {regime_alimentacao}

‚úàÔ∏è *Voos:*
IDA - {companhia} - {data}
{origem} {hora} / {destino} {hora} ({tipo})

VOLTA - {companhia} - {data}
{origem} {hora} / {destino} {hora} ({tipo})

üè® *Hotel Selecionado:*
{nome_hotel}
üìç {endereco}
üõèÔ∏è {tipo_quarto}
‚òï {regime}
{observacoes_resort_fee}

üí∞ R$ {valor_total} total
üí≥ {parcelamento}
üè∑Ô∏è {reembolso}

Valores sujeitos a confirma√ß√£o e disponibilidade` : ''}

${temAvianca && temGol && !temMultiplasOpcoes && !isMultitrecho ? `
**USE ESTE TEMPLATE DE VOO COMBINADO:**

*Voo {origem} ‚úà {destino}*
{data_ida} a {data_volta} ({X} dias e {Y} noites)

‚úàÔ∏è IDA - Avianca
{detalhes_ida_com_conexao}

‚úàÔ∏è VOLTA - Gol
{detalhes_volta_com_conexao}

üí∞ R$ {valor} para {passageiros}
üí≥ {parcelamento}
‚úÖ S√≥ mala de m√£o inclu√≠da
üè∑Ô∏è N√£o reembols√°vel

Valores sujeitos a confirma√ß√£o e disponibilidade` : ''}

${temMultiplasOpcoes && !isMultitrecho ? `
**USE ESTE TEMPLATE DE M√öLTIPLAS OP√á√ïES:**

*OP√á√ÉO 1 - {companhia} - {origem} ‚úà {destino}*
{detalhes_opcao1}

üí∞ R$ {valor1} para {passageiros1}
‚úÖ {bagagem1}
üè∑Ô∏è {reembolso1}

---

*OP√á√ÉO 2 - {companhia} - {origem} ‚úà {destino}*
{detalhes_opcao2}
{nota_codeshare_se_houver}

üí∞ R$ {valor2} para {passageiros2}
‚úÖ {bagagem2}
üè∑Ô∏è {reembolso2}

Valores sujeitos a confirma√ß√£o e disponibilidade` : ''}

**EXEMPLO CORRETO PARA VOO SIMPLES:**
Dados: Latam, S√£o Paulo-Juazeiro do Norte, 07/10-09/10, GRU-JDO, R$ 1.026,02, linkCVC fornecido

SA√çDA OBRIGAT√ìRIA:
*Latam - S√£o Paulo ‚úà Juazeiro do Norte*
07/10 - Guarulhos 08:20 / Juazeiro do Norte 11:15 (voo direto)
--
09/10 - Juazeiro do Norte 16:05 / Guarulhos 19:15 (voo direto)

üí∞ R$ 1.026,02 para 01 adulto
${temInfoParcelamento ? 'üí≥ Parcelamento em at√© 10x sem juros no cart√£o, sendo a primeira parcela de R$ 252,20 + 9x de R$ 85,98 s/ juros' : ''}
‚úÖ S√≥ mala de m√£o inclu√≠da
üè∑Ô∏è Tarifa facial
üîó https://www.cvc.com.br/carrinho-dinamico/6899f5730216ce3286369b76

Valores sujeitos a confirma√ß√£o e disponibilidade

**NUNCA FA√áA:**
‚ùå Listar campos como "Origem:", "Destino:", "Data:"
‚ùå Usar formato de lista ou bullet points
‚ùå Adicionar t√≠tulos como "OR√áAMENTO DE VIAGEM"
‚ùå Usar formato diferente do template
‚ùå Incluir parcelamento sem ter a informa√ß√£o
‚ùå Usar "Entrada de" ao inv√©s de "primeira parcela de"

// =================================================================
// CONVERS√ÉO DE C√ìDIGOS
// =================================================================

**SEMPRE CONVERTER:**
${tabelaAeroportos}

// =================================================================
// REGRAS FINAIS
// =================================================================

1. **DETECTAR CORRETAMENTE O TIPO**
2. **USAR O TEMPLATE APROPRIADO**
3. **CONVERTER TODOS OS C√ìDIGOS**
4. **SE N√ÉO TEM PRE√áO, OMITIR LINHA DE VALOR**
5. **SE TEM LINK CVC, SEMPRE INCLUIR COM üîó**
6. **INCLUIR DETALHES DE CONEX√ÉO QUANDO HOUVER**
7. **MENCIONAR CODESHARE SE APLIC√ÅVEL**
8. **FORMATAR PARCELAMENTO:** S√≥ se tiver info, usar: "Parcelamento em at√© 10x sem juros no cart√£o, sendo a primeira parcela de R$ XXX + 9x de R$ YYY s/ juros"
9. **TERMINAR COM "Valores sujeitos..."**
10. **MULTITRECHO:** Usar formato compacto quando voos id√™nticos

**IMPORTANTE:**
- Parcelamento: sempre "primeira parcela" (nunca "entrada")
- Resort Fee = mencionar em observa√ß√µes do hotel
- Passageiros = sempre com zero √† esquerda (01, 02, 03)
- Multitrecho = n√£o repetir companhia, usar -- entre trechos`;
            }

            // ================================================================================
            // 6. ü§ñ PROCESSAMENTO COM IA
            // ================================================================================
            let resultado = '';
            let iaUsada = 'gpt-4o-mini';

            // 6.1 - Decis√£o de IA (Claude vs GPT)
            const usarClaude = imagemBase64 ||
                (conteudoPrincipal.length > 2000) ||
                tipos.includes('Cruzeiro') ||
                isPacote ||
                (temAvianca && temGol) ||
                isMultitrecho;

            console.log('ü§ñ IA selecionada:', usarClaude ? 'Claude' : 'GPT');

            // 6.2 - Processamento com Claude
            if (usarClaude && process.env.ANTHROPIC_API_KEY) {
                console.log('ü§ñ Usando Claude 3 Haiku...');
                iaUsada = 'claude-3-haiku';
                const systemPromptClaude = `Voc√™ √© um assistente da CVC Itaqua. INSTRU√á√ïES ABSOLUTAS - USE EXATAMENTE ESTE FORMATO: 

PARA VOO SIMPLES: 
*{Companhia} - {Cidade Origem} ‚úà {Cidade Destino}* 
{DD/MM} - {Aeroporto} {HH:MM} / {Aeroporto} {HH:MM} ({tipo}) 
-- 
{DD/MM} - {Aeroporto} {HH:MM} / {Aeroporto} {HH:MM} ({tipo}) 

üí∞ R$ {valor} para {passageiros} 
${temInfoParcelamento ? 'üí≥ {parcelamento}' : ''}
‚úÖ {bagagem} 
üè∑Ô∏è {tarifa} 
üîó {link se houver} 

Valores sujeitos a confirma√ß√£o e disponibilidade. 

PARA MULTITRECHO COM M√öLTIPLAS OP√á√ïES:
*{Companhia} - Multitrecho*
{trecho1}
--
{trecho2}
--
{trecho3}

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
üí∞ *VALORES DISPON√çVEIS:*
Para {passageiros}

*Op√ß√£o 1:* R$ {valor1}
‚úÖ {bagagem1}
${temInfoParcelamento ? 'üí≥ {parcelamento1}' : ''}
üè∑Ô∏è {tarifa1}

*Op√ß√£o 2:* R$ {valor2}
‚úÖ {bagagem2}
${temInfoParcelamento ? 'üí≥ {parcelamento2}' : ''}
üè∑Ô∏è {tarifa2}

Valores sujeitos a confirma√ß√£o e disponibilidade

FORMATO CORRETO DE PARCELAMENTO: 
- "Parcelamento em at√© 10x sem juros no cart√£o, sendo a primeira parcela de R$ XXX + 9x de R$ YYY s/ juros" 
- NUNCA use "Entrada de", sempre "primeira parcela de". 

CONVERS√ïES: GRU‚ÜíGuarulhos, JDO‚ÜíJuazeiro do Norte, MCO‚ÜíOrlando, LIS‚ÜíLisboa, ORY‚ÜíParis Orly. 

${!temInfoParcelamento ? 'N√ÉO incluir linha de parcelamento' : 'SEMPRE INCLUIR O PARCELAMENTO FORNECIDO'}
SEMPRE INCLUIR O LINK SE FORNECIDO!`;
                
                const messages = [{
                    role: 'user',
                    content: imagemBase64 ? [{
                        type: 'text',
                        text: prompt
                    }, {
                        type: 'image',
                        source: {
                            type: 'base64',
                            media_type: imagemBase64.split(';')[0].split(':')[1],
                            data: imagemBase64.split(',')[1]
                        }
                    }] : prompt
                }];
                
                const claudeResponse = await fetch('https://api.anthropic.com/v1/messages', {
                    method: 'POST',
                    headers: {
                        'x-api-key': process.env.ANTHROPIC_API_KEY,
                        'anthropic-version': '2023-06-01',
                        'content-type': 'application/json'
                    },
                    body: JSON.stringify({
                        model: 'claude-3-haiku-20240307',
                        max_tokens: 2000,
                        temperature: 0.1,
                        messages,
                        system: systemPromptClaude
                    })
                });
                
                if (!claudeResponse.ok) {
                    const errorText = await claudeResponse.text();
                    console.error('‚ùå Erro Claude:', errorText);
                    throw new Error(`Erro ao processar com Claude: ${errorText}`);
                }
                
                const claudeData = await claudeResponse.json();
                resultado = claudeData.content[0].text;

            }
            // 6.3 - Processamento com GPT
            else {
                console.log('ü§ñ Usando GPT-4o-mini...');
                const OPENAI_KEY = process.env.OPENAI_API_KEY;
                if (!OPENAI_KEY) {
                    throw new Error('OpenAI API key n√£o configurada.');
                }
                
                const systemPromptGpt = `Voc√™ √© um assistente da CVC Itaqua. REGRAS CR√çTICAS - SIGA EXATAMENTE: 

1. FORMATO OBRIGAT√ìRIO PARA VOOS: 
   *Companhia - Cidade Origem ‚úà Cidade Destino* 
   DD/MM - Aeroporto HH:MM / Aeroporto HH:MM (tipo voo) 
   -- 
   DD/MM - Aeroporto HH:MM / Aeroporto HH:MM (tipo voo) 
   
   üí∞ R$ valor para passageiros 
   ${temInfoParcelamento ? 'üí≥ Parcelamento (se houver)' : ''}
   ‚úÖ Bagagem 
   üè∑Ô∏è Tipo tarifa 
   üîó Link (se houver) 
   
   Valores sujeitos a confirma√ß√£o e disponibilidade. 

2. PARA MULTITRECHO:
   *Companhia - Multitrecho*
   {trechos com -- entre eles}
   
   Se houver m√∫ltiplas op√ß√µes de valores, use formato compacto com valores separados.

3. FORMATO DE PARCELAMENTO OBRIGAT√ìRIO: 
   ${temInfoParcelamento ? '- "Parcelamento em at√© 10x sem juros no cart√£o, sendo a primeira parcela de R$ XXX + 9x de R$ YYY s/ juros"' : '- N√ÉO incluir parcelamento'}
   - NUNCA use "Entrada de", sempre "primeira parcela de". 

4. CONVERS√ïES OBRIGAT√ìRIAS: 
   GRU‚ÜíGuarulhos, JDO‚ÜíJuazeiro do Norte, MCO‚ÜíOrlando, BOG‚ÜíBogot√°, LIS‚ÜíLisboa, ORY‚ÜíParis Orly. 

5. SEMPRE INCLUIR O LINK SE FORNECIDO!`;
                
                const gptResponse = await fetch('https://api.openai.com/v1/chat/completions', {
                    method: 'POST',
                    headers: {
                        'Authorization': `Bearer ${OPENAI_KEY}`,
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        model: 'gpt-4o-mini',
                        messages: [{
                            role: 'system',
                            content: systemPromptGpt
                        }, {
                            role: 'user',
                            content: prompt
                        }],
                        temperature: 0.1,
                        max_tokens: 2000
                    })
                });
                
                if (!gptResponse.ok) {
                    const errorText = await gptResponse.text();
                    console.error('‚ùå Erro GPT:', errorText);
                    throw new Error(`Erro ao processar com GPT: ${errorText}`);
                }
                
                const gptData = await gptResponse.json();
                resultado = gptData.choices[0].message.content;
            }

            // ================================================================================
            // 7. ‚úÖ RESPOSTA FINAL
            // ================================================================================
            console.log('‚úÖ Processamento conclu√≠do');
            const tipoDetectadoFinal = isDicas ? 'dicas' :
                isRanking ? 'ranking' :
                isMultitrecho ? 'multitrecho' :
                isPacote ? 'pacote' :
                temMultiplasOpcoes ? 'multiplas_opcoes' :
                (temAvianca && temGol) ? 'voo_combinado' :
                'voo_simples';

            console.log('üìã Tipo detectado:', tipoDetectadoFinal.toUpperCase());
            console.log('üí∞ Tem pre√ßo?', temPreco ? 'SIM' : 'N√ÉO');
            console.log('üí≥ Tem info parcelamento?', temInfoParcelamento ? 'SIM' : 'N√ÉO');

            return res.status(200).json({
                success: true,
                result: resultado,
                ia_usada: iaUsada,
                version: '7.7',
                tipo_detectado: tipoDetectadoFinal,
                tem_preco: temPreco,
                tem_parcelamento: temInfoParcelamento,
                debug: {
                    section_1: 'Templates processados',
                    section_2: 'Aeroportos convertidos',
                    section_3: 'Handler executado',
                    section_4: 'Dados processados (com multitrecho)',
                    section_5: 'Prompt utilizado',
                    section_6: `IA utilizada: ${iaUsada}`,
                    section_7: 'Resposta formatada'
                }
            });

        } catch (error) {
            console.error('‚ùå Erro no handler principal:', error);
            return res.status(500).json({
                success: false,
                error: error.message || 'Erro desconhecido no servidor',
                version: '7.7'
            });
        }
    }

    return res.status(405).json({
        success: false,
        error: 'M√©todo n√£o suportado',
        version: '7.7'
    });
}
